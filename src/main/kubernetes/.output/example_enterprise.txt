apiVersion: v1
data:
  client.p12: just-a-dummy-file
  serverks.jks: just-a-dummy-file
kind: ConfigMap
metadata:
  name: certificatestores
  namespace: ping-pong-service
---
apiVersion: v1
data:
  client.mode: metrics
  rabbitmq.clientkeystorepassphase: ping-pong
  rabbitmq.clientkeystorepath: /tmp/certs/client.p12
  rabbitmq.host: YOUR_AWESOME_BROKER_URL
  rabbitmq.password: YOUR_AWESOME_PASSWORD
  rabbitmq.port: "5671"
  rabbitmq.receiver.queue: ping-pong-receiver
  rabbitmq.sender.queue: ping-pong-sender
  rabbitmq.serverkeystorepassphase: ping-pong
  rabbitmq.serverkeystorepath: /tmp/certs/serverks.jks
  rabbitmq.useclientcert: "true"
  rabbitmq.username: YOUR_AWESOME_USERNAME
  rabbitmq.virtualhost: /
kind: ConfigMap
metadata:
  name: configuration-metrics
  namespace: ping-pong-service
---
apiVersion: v1
data:
  client.mode: receiver
  rabbitmq.clientkeystorepassphase: ping-pong
  rabbitmq.clientkeystorepath: /tmp/certs/client.p12
  rabbitmq.host: YOUR_AWESOME_BROKER_URL
  rabbitmq.password: YOUR_AWESOME_PASSWORD
  rabbitmq.port: "5671"
  rabbitmq.receiver.queue: ping-pong-receiver
  rabbitmq.sender.queue: ping-pong-sender
  rabbitmq.serverkeystorepassphase: ping-pong
  rabbitmq.serverkeystorepath: /tmp/certs/serverks.jks
  rabbitmq.useclientcert: "true"
  rabbitmq.username: YOUR_AWESOME_USERNAME
  rabbitmq.virtualhost: /
kind: ConfigMap
metadata:
  name: configuration-receiver
  namespace: ping-pong-service
---
apiVersion: v1
data:
  client.mode: sender
  rabbitmq.clientkeystorepassphase: ping-pong
  rabbitmq.clientkeystorepath: /tmp/certs/client.p12
  rabbitmq.host: YOUR_AWESOME_BROKER_URL
  rabbitmq.password: YOUR_AWESOME_PASSWORD
  rabbitmq.port: "5671"
  rabbitmq.receiver.queue: ping-pong-receiver
  rabbitmq.sender.queue: ping-pong-sender
  rabbitmq.serverkeystorepassphase: ping-pong
  rabbitmq.serverkeystorepath: /tmp/certs/serverks.jks
  rabbitmq.useclientcert: "true"
  rabbitmq.username: YOUR_AWESOME_USERNAME
  rabbitmq.virtualhost: /
kind: ConfigMap
metadata:
  name: configuration-sender
  namespace: ping-pong-service
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ping-pong-service
  name: ping-pong-metrics
  namespace: ping-pong-service
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: ping-pong-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ping-pong-service
  namespace: ping-pong-service
spec:
  selector:
    matchLabels:
      app: ping-pong-service
  template:
    metadata:
      labels:
        app: ping-pong-service
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: configuration-sender
        image: ghcr.io/deb4sh/ldap-homelab:sha-1033f81
        name: sender
        resources:
          limits:
            cpu: 150m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - mountPath: /tmp/certs
          name: certificates
      - envFrom:
        - configMapRef:
            name: configuration-receiver
        image: ghcr.io/deb4sh/ldap-homelab:sha-1033f81
        name: receiver
        resources:
          limits:
            cpu: 150m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - mountPath: /tmp/certs
          name: certificates
      - envFrom:
        - configMapRef:
            name: configuration-metrics
        image: ghcr.io/deb4sh/ldap-homelab:sha-1033f81
        name: metrics
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 150m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - mountPath: /tmp/certs
          name: certificates
      restartPolicy: Always
      securityContext:
        runAsUser: 1000
      volumes:
      - configMap:
          name: certificatestores
        name: certificates
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: ping-pong-metrics
  name: ping-pong-metrics
  namespace: ping-pong-service
spec:
  endpoints:
  - interval: 5s
    path: /
    targetPort: 8080
  namespaceSelector:
    matchNames:
    - ping-pong-service
  selector:
    matchLabels:
      app: ping-pong-service
